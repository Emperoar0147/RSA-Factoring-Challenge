#!/usr/bin/python3

import math

def is_prime(num):
    if num <= 1:
        return False
    if num <= 3:
        return True
    if num % 2 == 0 or num % 3 == 0:
        return False
    i = 5
    while i * i <= num:
        if num % i == 0 or num % (i + 2) == 0:
            return False
        i += 6
    return True

def prime_factors(n):
    factors = []
    # Remove factors of 2
    while n % 2 == 0:
        factors.append(2)
        n //= 2
    # n must be odd at this point, so a skip of 2 (i = i + 2) can be used
    for i in range(3, int(math.sqrt(n)) + 1, 2):
        while n % i == 0:
            factors.append(i)
            n //= i
    # If n is a prime greater than 2
    if n > 2:
        factors.append(n)
    return factors

def main():
    n = int(input().strip())  # Read RSA number from input
    if is_prime(n):
        print("The number is prime.")
    else:
        factors = prime_factors(n)
        if len(factors) == 2:
            print("Prime factors are:", factors[0], "and", factors[1])
        else:
            print("Error: The number does not have exactly 2 prime factors.")

if __name__ == "__main__":
    main()
