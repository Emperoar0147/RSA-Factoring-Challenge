#!/usr/bin/python3

import sys
import math
import random


def gcd(a, b):
    while b:
        a, b = b, a % b
    return a


def pollard_rho(n):
    if n % 2 == 0:
        return 2

    x = random.randint(1, n-1)
    y = x
    c = random.randint(1, n-1)
    d = 1

    f = lambda x: (x*x + c) % n
    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x-y), n)

    return d


def find_prime_factors(number):
    factors = []

    while number > 1:
        factor = pollard_rho(number)
        factors.append(factor)
        number //= factor

    return factors


def main(filename):
    with open(filename, 'r') as file:
        number = int(file.read().strip())

    factors = find_prime_factors(number)
    
    if len(factors) == 2:
        p, q = factors
        print(f"{number}={p}*{q}")
    else:
        print(f"Unable to factorize {number} within the time limit.")


if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: ./factors <file>")
        sys.exit(1)

    main(sys.argv[1])
