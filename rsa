#!/usr/bin/python3

import sys
import math
import random


def gcd(a, b):
    while b:
        a, b = b, a % b
    return a


def pollards_rho(n):
    if n % 2 == 0:
        return 2

    x = random.randint(1, n - 1)
    y = x
    c = random.randint(1, n - 1)
    d = 1

    def f(x):
        return (x * x + c) % n

    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x - y), n)

    return d


def find_prime_factors(n):
    if n <= 1:
        return []

    factors = []

    while n > 1:
        factor = pollards_rho(n)
        factors.append(factor)
        n //= factor

    return factors


def main(filename):
    with open(filename, 'r') as file:
        n = int(file.read().strip())

    factors = find_prime_factors(n)
    p, q = factors[0], factors[1]
    print(f"{n}={p}*{q}")


if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: ./factors <file>")
        sys.exit(1)

    main(sys.argv[1])
